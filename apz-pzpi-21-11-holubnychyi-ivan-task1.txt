1 БІЗНЕС-ВИМОГИ
1.1 Передумови

Кількість великих та середніх корпорацій, які розміщують свої офіси на всі куточках світу та мають близько сотень тисяч працівників невпинно ростуть. Наявність кухні в офісах вже стало звичним явищем, тому все більш частіше постає питання про наявність холодильників, які зможуть не лише зберігати їжу, а й забезпечити захист та зручне користування. Робітники завжди  концентруються на роботі, але  думки про термін придатності їжі чи можливість її викрадення іншим співробітником або думки чи є вільні місця в холодильнику на третьому поверсі, можуть погіршити ефективність роботи та займати додатковий час під час ланчу. Такі холодильники забезпечують зручність та ефективність, а саме головне беруть на себе обов’язки контролю та доступу до продуктів. 
Головна ідея полягає в створенні зручного та ефективного інструмента для управління корпоративними холодильниками. Мета продукту – полягає в спрощені організації та контролю за зберіганням харчових продуктів в корпоративних середовищах.
матизації процесу догляду за тваринами у період короткочасного терміну перебування в готелі та максимально уникнути залучення сторонніх людей.

1.2 Бізнес-можливості

Хоча програмна система організації роботи корпоративних холодильників  вирішує достатньо багато проблем співробітників та власників фірм, насправді якісних аналогів мало. До гарних аналогів даної програмної системи можемо віднести «neuroshop.tech».
Даний аналог системи спирається на ідеї торгівлі без залучення продавців, що дозволяє мінімізувати залучення людського ресурсу для продажу. Вона дозволяє здійснювати оплату товару через мобільний телефон, слідкує за покупцем за допомогою різноманітних датчиків руху та може точно виділити товар, що покупець забрав. Також наявні адміністративні панелі та можливість формування статистики. Даний аналог також зможе запобігти зберігання продуктів із вичерпаним терміном придатності.
Якщо порівнювати аналог із даною системою, то можна помітити, що наша система буде мати більш широкі можливості, наприклад різні рівні доступу до холодильників та самостійне замовлення їжі. Наявність контролю клімату кожного холодильника надає гнучкість користування та  перевагу над системою, яка була розглянута  аналогом.
Наступний аналог “Logisticon WMS”, орієнтується на іншому напрямі, а саме управління  великими складами та забезпечення контролю поставок товарів для мінімізації  помилок та ефективного використання місця на складі.
Вона вирішує багато важливих завдань у сфері логістики та управління товарами. Вона пропонує ідентифікацію вхідного товару на склад з урахуванням численних параметрів, включаючи статус якості, номери партій, термін придатності, вагу і тип поставки. Контроль робіт, пов'язаних з прийманням, видачею та розміщенням товарів в реальному часі - це важлива функція для мінімізації помилок та оптимізації роботи зі складом. Автоматична підготовка документів на підставі фактично проведених операцій спрощує процеси обліку та звітності. Інтеграція з обліковою системою замовника дозволяє автоматичний обмін даними і спрощує процес ведення обліку.
Порівняно із попереднім аналогом наша система має конкретні переваги, які в нього відсутні, а саме:  відстеження параметрів холодильника і повідомляє про відхилення в температурі,  функція контролю доступу, що дозволяє обмежувати доступ до холодильників, функція автоматичного замовлення.
Модель монетизації для програмного продукту організації корпоративних холодильників може полягати в ліцензії для встановлення системи для постачальників холодильників, мається на увазі співпраця з виробниками холодильників для попередньої установки або вбудованої підтримки для програмного продукту в їх обладнанні. Виробники можуть платити за ліцензії для включення цього програмного рішення до своїх пристроїв. Самі співробітники можуть за певну плату на місяць розблокувати функцію замовлення їжі для холодильника  до якого він має доступ. 
Ринок, на який орієнтується програмний продукт, включає підприємства, офіси, ресторани, готелі, інші організації та корпорації, які мають потребу у керуванні харчовими ресурсами. З урахуванням зростаючої уваги до оптимізації процесів, зменшення витрат та покращення якості обслуговування в сфері харчування, цей продукт може мати перспективи на ринку.

2 КОНЦЕПЦІЯ РІШЕННЯ
2.1 Окреслення концепції

Метою  проекту є створення програмного продукту для організації корпоративних холодильників, спрямованого на полегшення управління запасами харчових ресурсів в офісах та підприємствах. Наша цільова аудиторія включає керівників офісів, фахівців з управління запасами, а також співробітників, які користуються корпоративними холодильниками.
Впровадження програмного продукту дозволить корпораціям перейти від традиційних, ручних методів управління харчовими ресурсами до автоматизованої та точної системи контролю. Процеси замовлення, обліку, та моніторингу термінів придатності продуктів стануть більш ефективними, що сприятиме економії часу та грошей фірми, як наслідок призведе до зменшення витрат на управління запасами.
Наявний функціонал програмної системи дозволить прибрати велику кількість рутинних справ, що пов’язані із інвентаризацією чи пошуком вільного холодильника, що займає неприпустимо довгий час для співробітників.  Вирішуючи проблему контролю доступом для певного холодильника ми  мінімізуємо можливість нерівномірного розподілення продуктів по різних холодильниках та викрадення продуктів. 


2.2 Головна функціональність

MF-1: Контроль температури та вологості в холодильнику й повідомлення про збій, якщо температура не відповідає поточній;
MF-2: Наявність контролю доступу до холодильників для співробітників, щоб користувачі  мали  доступ лише до певних холодильників;
MF-3: Функція авто замовлення продуктів в певний період часу, спираючись на список продуктів, який був складений користувачами;
MF-4: Аналітичний інструмент, який буде прогнозувати споживання продуктів на основі історії користування та інших факторів та даватиме рекомендації, які краще продукти купувати;
MF- 5: Можливість перегляду списку наявних продуктів віддалено, використовуючи мобільний додаток або вебчастину при наявності доступу до холодильника;
MF-6: Можна буде сформувати помісячну оплату, щоб користуватися функцією MF-3;
MF-7: Холодильник буде мати власну історію користувань, яка буде доступна всім робітникам, які мають доступ  до даного пристрою;
MF-8: Формування статистики затрат для кожного холодильника спираючись на час користування пристроєм;
MF-9: Спираючись на час початку та кінця використання холодильника в період доби, буде проводитися інвентаризація наявних продуктів та відправка повідомлення працівникам, якщо їхні продукти вже зіпсовані;
MF-10:  Функція реєстрації для мобільної та вебчастини системи;
MF-11:  Функція редагування власного акаунту;
MF-12:  Співробітник зможе переглядати власну історію відвідувань холодильників та перелік власних продуктів, які досі зберігаються;
MF-13: Співробітник зможе вказати, що він забрав із холодильника та що поклав, щоб  забезпечити актуальність списку наявних продуктів;
MF-14: Всі види списків чи статистик, які будуть відображатися користувачам,  матимуть можливість сортування та фільтрації.


3 РАМКИ ТА ОБМЕЖЕННЯ ПРОЄКТУ
3.1 Рамки первинного випуску

Для кращого опису функціональності системи контролю корпоративними холодильниками у першому випуску програмного продукту, було поділено функції на частини, включаючи серверну, частину IoT, вебчастину та мобільний додаток.
 	Функції серверної частини:
•автентифікація та авторизація. Сервер має забезпечити систему автентифікації користувачів та надання прав доступу на основі ролей;
•збереження даних. Сервер повинен забезпечити зберігання даних про холодильники, користувачів, історії користування, списків продуктів;
•захист даних. Всі важливі атрибути із бази даних мають бути зашифровані та при необхідності дешифровані на серверній частині;
•автоматичне замовлення продуктів. Сервер повинен містити необхідну бізнес-логіку, щоб здійснювати замовлення через зовнішні API;
•інвентаризація. Сервер повинен здійснювати аналіз всіх холодильників та знаходити продукти, які вже вважаються зіпсованими. Оскільки до кожного продукту ми зможемо побачити власника, наприклад компанія чи певний користувач, то сервер надсилає повідомлення про зіпсований продукт та всю інформацію про нього;
•статистики. Сервер повинен містити логіку та правильно формувати статистику затрат, яка буде формуватися для кожного холодильника спираючись на час користування пристроєм та ті затрати, які випливають із функції авто замовлення;
•надсилання запита на підтвердження. Сервер повинен швидко надіслати запит на підтвердження відкриття холодильника саме цим користувачем, а потім надсилати позитивну чи негативну відповідь до холодильника;
•функція оплати. Сервер повинен мати часткову логіку оплати на сервері для використання ключа API, щоб безпечно створити транзакцію;
•адміністрування. Сервер повинен враховувати наявність ролей, які зможуть мати широкий доступ до даних.
 	Функції для IoT частини:
•повинно бути забезпечено збір даних про температуру, вологість та кількість здійснених входжень до холодильника для проведення аналізу стану пристроїв;
•моніторинг та контроль температури, а саме аналіз даних про температуру протягом 24 годин, якщо протягом даного часу поточна температура буде відхилятися від бажаної на 2-3 градуса, то він терміново надсилає адміністраторам повідомлення про проблему, а при необхідності припиняє свою роботу;
•аналіз часу проведення інвентаризації. Протягом кількох робочих днів, холодильники будуть зберігати інформацію про час першого доступу до холодильника та останнього доступу в період дня. Потім буде обрано середній час початкового та кінцевого часу за якими буде автоматично проводитися функція інвентаризації;
•передача даних. Холодильники повинні мати можливість передавати зібрані дані на сервер для подальших дій;
•аналітичний інструмент, який буде прогнозувати споживання продуктів на основі історії користування та інших факторів.
	Функції клієнтської частини, а саме вебчастини:
•графічний інтерфейс для авторизації та реєстрації: Дана частина повинна надати користувачам можливість авторизуватися в системі та створювати облікові записи використовуючи графічні інтерфейси;
•наявність окремих видів інтерфейсів для різних адміністраторів. Тобто адміністратори під час входження до системи повинні мати різні інтерфейси порівняно з користувачами та мати можливість проводити операції лише ті, які передбаченні даної системою;
•локалізація. Відображення мови та стилів написання залежно від країни та мови;
•перегляд статистики та історії: Користувачі можуть переглядати статистику витрат та історію користування, наявні продукти маючи зручні засоби сортування та фільтрування інформації;
•можливість оформлення підписки для користування функцією автоматичного замовлення, якщо підписка наявна, то відбувається відкриття доступу до кожного списку товарів, які будуть замовлятися автоматично;
•наявність налаштувань власного кабінету. Можливість змінювати персональну інформацію;
•наявність доступу перегляду інформації для кожного холодильника, який доступний працівнику та наявні дані про нього: історію користувань, температуру, вологість  і таке інше.
	Мобільний додаток буде мати більшість функцій, які має вебчастина, але кілька додаткових, а саме: 
•можливість підтверджувати запит на доступ до холодильника, після чого буде доступна форма для заповнення інформацію про продукти, які співробітник поклав або виклав під час користування;
•мобільний додаток також має створювати сповіщення, щодо подій, які відбулися з їжею або холодильником авторизованого користувача.


3.2 Рамки наступних випусків

 Функції, які плануються реалізувати у майбутньому:
•прогнозування споживання продуктів: Реалізація аналітичного інструменту, який буде прогнозувати споживання продуктів на основі історії користування та інших факторів;
•реалізації функції оплати для відкриття доступу до функції авто замовлення;
•функція можливість вибору власних постачальників продуктів.

4 БІЗНЕС-КОНТЕКСТ
4.3 Робоче середовище

Серверна частина буде побудована з використанням фреймворку Spring Boot та програмуванням на мові Java. Дані про корпоративні холодильники та інші види інформації будуть зберігатися в базі даних та керуватися системою управління базами даних MySQL.
У вебчастині для створення користувацького інтерфейсу будуть використані JavaScript, HTML та CSS, React Native, а також фреймворк Bootstrap для поліпшення дизайну. Для мобільної частини передбачено використання мови програмування Kotlin та використанням Android SDK.
Інтернет речей (IoT) застосунок, буде розроблений з використанням мови програмування Java. Також буде використовуватися офіційна версія Raspberry Pi для персональних комп’ютерів. Вона буде встановлена на віртуальну машину в VirtualBox. Також буде використовуватися Azure IoT Hub. Для комунікації з підключеними пристроями буде використовуватися REST API.
Основні вимоги щодо доступности, надійности, продуктивності та цілісності виглядають наступним чином:
•система повинна бути доступною для користувачів з різних географічних регіонів, які можуть розташовуватися в різних часових поясах. Доступ до системи має бути можливим 24/7, оскільки користувачі можуть мати різний графік роботи та потребувати доступу в будь-який момент;
•має бути забезпечення резервних копій даних та можливість відновлення системи в разі аварійних ситуацій;
•можливість масштабування системи для підтримки зростаючої кількості користувачів та пристроїв;
•забезпечення конфіденційності та цілісності даних через засоби шифрування та контролю доступу.

